// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Arrays
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsArrays(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_select");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_select_n");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_store");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_store_n");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_const_array");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_map");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_array_default");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_as_array");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_set_has_size");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_selectDelegate(IntPtr c, IntPtr a, IntPtr i);

    internal IntPtr Z3_mk_select(IntPtr c, IntPtr a, IntPtr i)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_select");
        var func = Marshal.GetDelegateForFunctionPointer<mk_selectDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_select_nDelegate(IntPtr c, IntPtr a, uint n, IntPtr idxs);

    internal IntPtr Z3_mk_select_n(IntPtr c, IntPtr a, uint n, IntPtr idxs)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_select_n");
        var func = Marshal.GetDelegateForFunctionPointer<mk_select_nDelegate>(funcPtr);
        return func(c, a, n, idxs);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_storeDelegate(IntPtr c, IntPtr a, IntPtr i, IntPtr v);

    internal IntPtr Z3_mk_store(IntPtr c, IntPtr a, IntPtr i, IntPtr v)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_store");
        var func = Marshal.GetDelegateForFunctionPointer<mk_storeDelegate>(funcPtr);
        return func(c, a, i, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_store_nDelegate(IntPtr c, IntPtr a, uint n, IntPtr idxs, IntPtr v);

    internal IntPtr Z3_mk_store_n(IntPtr c, IntPtr a, uint n, IntPtr idxs, IntPtr v)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_store_n");
        var func = Marshal.GetDelegateForFunctionPointer<mk_store_nDelegate>(funcPtr);
        return func(c, a, n, idxs, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_const_arrayDelegate(IntPtr c, IntPtr domain, IntPtr v);

    internal IntPtr Z3_mk_const_array(IntPtr c, IntPtr domain, IntPtr v)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_const_array");
        var func = Marshal.GetDelegateForFunctionPointer<mk_const_arrayDelegate>(funcPtr);
        return func(c, domain, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_mapDelegate(IntPtr c, IntPtr f, uint n, IntPtr args);

    internal IntPtr Z3_mk_map(IntPtr c, IntPtr f, uint n, IntPtr args)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_map");
        var func = Marshal.GetDelegateForFunctionPointer<mk_mapDelegate>(funcPtr);
        return func(c, f, n, args);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_array_defaultDelegate(IntPtr c, IntPtr array);

    internal IntPtr Z3_mk_array_default(IntPtr c, IntPtr array)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_array_default");
        var func = Marshal.GetDelegateForFunctionPointer<mk_array_defaultDelegate>(funcPtr);
        return func(c, array);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_as_arrayDelegate(IntPtr c, IntPtr f);

    internal IntPtr Z3_mk_as_array(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_as_array");
        var func = Marshal.GetDelegateForFunctionPointer<mk_as_arrayDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_set_has_sizeDelegate(IntPtr c, IntPtr set, IntPtr k);

    internal IntPtr Z3_mk_set_has_size(IntPtr c, IntPtr set, IntPtr k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_set_has_size");
        var func = Marshal.GetDelegateForFunctionPointer<mk_set_has_sizeDelegate>(funcPtr);
        return func(c, set, k);
    }

}
