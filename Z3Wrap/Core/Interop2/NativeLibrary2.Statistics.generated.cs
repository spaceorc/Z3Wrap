// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Statistics
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsStatistics(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_to_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_size");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_get_key");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_is_uint");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_is_double");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_get_uint_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_stats_get_double_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_estimated_alloc_size");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr stats_to_stringDelegate(IntPtr c, IntPtr s);

    internal IntPtr Z3_stats_to_string(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_to_string");
        var func = Marshal.GetDelegateForFunctionPointer<stats_to_stringDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void stats_inc_refDelegate(IntPtr c, IntPtr s);

    internal void Z3_stats_inc_ref(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<stats_inc_refDelegate>(funcPtr);
        func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void stats_dec_refDelegate(IntPtr c, IntPtr s);

    internal void Z3_stats_dec_ref(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<stats_dec_refDelegate>(funcPtr);
        func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint stats_sizeDelegate(IntPtr c, IntPtr s);

    internal uint Z3_stats_size(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_size");
        var func = Marshal.GetDelegateForFunctionPointer<stats_sizeDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr stats_get_keyDelegate(IntPtr c, IntPtr s, uint idx);

    internal IntPtr Z3_stats_get_key(IntPtr c, IntPtr s, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_get_key");
        var func = Marshal.GetDelegateForFunctionPointer<stats_get_keyDelegate>(funcPtr);
        return func(c, s, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool stats_is_uintDelegate(IntPtr c, IntPtr s, uint idx);

    internal bool Z3_stats_is_uint(IntPtr c, IntPtr s, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_is_uint");
        var func = Marshal.GetDelegateForFunctionPointer<stats_is_uintDelegate>(funcPtr);
        return func(c, s, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool stats_is_doubleDelegate(IntPtr c, IntPtr s, uint idx);

    internal bool Z3_stats_is_double(IntPtr c, IntPtr s, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_is_double");
        var func = Marshal.GetDelegateForFunctionPointer<stats_is_doubleDelegate>(funcPtr);
        return func(c, s, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint stats_get_uint_valueDelegate(IntPtr c, IntPtr s, uint idx);

    internal uint Z3_stats_get_uint_value(IntPtr c, IntPtr s, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_get_uint_value");
        var func = Marshal.GetDelegateForFunctionPointer<stats_get_uint_valueDelegate>(funcPtr);
        return func(c, s, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate double stats_get_double_valueDelegate(IntPtr c, IntPtr s, uint idx);

    internal double Z3_stats_get_double_value(IntPtr c, IntPtr s, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_stats_get_double_value");
        var func = Marshal.GetDelegateForFunctionPointer<stats_get_double_valueDelegate>(funcPtr);
        return func(c, s, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate ulong get_estimated_alloc_sizeDelegate();

    internal ulong Z3_get_estimated_alloc_size()
    {
        var funcPtr = GetFunctionPointer("Z3_get_estimated_alloc_size");
        var func = Marshal.GetDelegateForFunctionPointer<get_estimated_alloc_sizeDelegate>(funcPtr);
        return func();
    }

}
