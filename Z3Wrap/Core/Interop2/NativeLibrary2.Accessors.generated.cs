// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Accessors
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsAccessors(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_symbol_kind");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_symbol_int");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_symbol_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_sort_name");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_sort_id");
        LoadFunctionOrNull(handle, functionPointers, "Z3_sort_to_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_eq_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_sort_kind");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_bv_sort_size");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_finite_domain_sort_size");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_array_arity");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_array_sort_domain");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_array_sort_domain_n");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_array_sort_range");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_tuple_sort_mk_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_tuple_sort_num_fields");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_tuple_sort_field_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_recursive_datatype_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_datatype_sort_num_constructors");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_datatype_sort_constructor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_datatype_sort_recognizer");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_datatype_sort_constructor_accessor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_datatype_update_field");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_relation_arity");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_relation_column");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_atmost");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_atleast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_pble");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_pbge");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_pbeq");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_decl_to_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_eq_func_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_func_decl_id");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_name");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_kind");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_domain_size");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_arity");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_domain");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_range");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_num_parameters");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_parameter_kind");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_int_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_double_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_symbol_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_sort_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_ast_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_func_decl_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_decl_rational_parameter");
        LoadFunctionOrNull(handle, functionPointers, "Z3_app_to_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_app_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_app_num_args");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_app_arg");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_eq_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_ast_id");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_ast_hash");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_well_sorted");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_bool_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_ast_kind");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_app");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_ground");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_depth");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_numeral_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_algebraic_number");
        LoadFunctionOrNull(handle, functionPointers, "Z3_to_app");
        LoadFunctionOrNull(handle, functionPointers, "Z3_to_func_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_binary_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_decimal_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_double");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numerator");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_denominator");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_small");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_int");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_uint");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_uint64");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_int64");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_numeral_rational_int64");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_algebraic_number_lower");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_algebraic_number_upper");
        LoadFunctionOrNull(handle, functionPointers, "Z3_pattern_to_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_pattern_num_terms");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_pattern");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_index_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_quantifier_forall");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_quantifier_exists");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_lambda");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_weight");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_skolem_id");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_id");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_num_patterns");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_pattern_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_num_no_patterns");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_no_pattern_ast");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_num_bound");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_bound_name");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_bound_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_quantifier_body");
        LoadFunctionOrNull(handle, functionPointers, "Z3_simplify");
        LoadFunctionOrNull(handle, functionPointers, "Z3_simplify_ex");
        LoadFunctionOrNull(handle, functionPointers, "Z3_simplify_get_help");
        LoadFunctionOrNull(handle, functionPointers, "Z3_simplify_get_param_descrs");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_symbol_kindDelegate(IntPtr c, IntPtr s);

    internal int Z3_get_symbol_kind(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_symbol_kind");
        var func = Marshal.GetDelegateForFunctionPointer<get_symbol_kindDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_symbol_intDelegate(IntPtr c, IntPtr s);

    internal int Z3_get_symbol_int(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_symbol_int");
        var func = Marshal.GetDelegateForFunctionPointer<get_symbol_intDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_symbol_stringDelegate(IntPtr c, IntPtr s);

    internal IntPtr Z3_get_symbol_string(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_symbol_string");
        var func = Marshal.GetDelegateForFunctionPointer<get_symbol_stringDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_sort_nameDelegate(IntPtr c, IntPtr d);

    internal IntPtr Z3_get_sort_name(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_sort_name");
        var func = Marshal.GetDelegateForFunctionPointer<get_sort_nameDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_sort_idDelegate(IntPtr c, IntPtr s);

    internal uint Z3_get_sort_id(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_sort_id");
        var func = Marshal.GetDelegateForFunctionPointer<get_sort_idDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr sort_to_astDelegate(IntPtr c, IntPtr s);

    internal IntPtr Z3_sort_to_ast(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_sort_to_ast");
        var func = Marshal.GetDelegateForFunctionPointer<sort_to_astDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_eq_sortDelegate(IntPtr c, IntPtr s1, IntPtr s2);

    internal bool Z3_is_eq_sort(IntPtr c, IntPtr s1, IntPtr s2)
    {
        var funcPtr = GetFunctionPointer("Z3_is_eq_sort");
        var func = Marshal.GetDelegateForFunctionPointer<is_eq_sortDelegate>(funcPtr);
        return func(c, s1, s2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_sort_kindDelegate(IntPtr c, IntPtr t);

    internal int Z3_get_sort_kind(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_sort_kind");
        var func = Marshal.GetDelegateForFunctionPointer<get_sort_kindDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_bv_sort_sizeDelegate(IntPtr c, IntPtr t);

    internal uint Z3_get_bv_sort_size(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_bv_sort_size");
        var func = Marshal.GetDelegateForFunctionPointer<get_bv_sort_sizeDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_finite_domain_sort_sizeDelegate(IntPtr c, IntPtr s, IntPtr r);

    internal bool Z3_get_finite_domain_sort_size(IntPtr c, IntPtr s, IntPtr r)
    {
        var funcPtr = GetFunctionPointer("Z3_get_finite_domain_sort_size");
        var func = Marshal.GetDelegateForFunctionPointer<get_finite_domain_sort_sizeDelegate>(funcPtr);
        return func(c, s, r);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_array_arityDelegate(IntPtr c, IntPtr s);

    internal uint Z3_get_array_arity(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_array_arity");
        var func = Marshal.GetDelegateForFunctionPointer<get_array_arityDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_array_sort_domainDelegate(IntPtr c, IntPtr t);

    internal IntPtr Z3_get_array_sort_domain(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_array_sort_domain");
        var func = Marshal.GetDelegateForFunctionPointer<get_array_sort_domainDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_array_sort_domain_nDelegate(IntPtr c, IntPtr t, uint idx);

    internal IntPtr Z3_get_array_sort_domain_n(IntPtr c, IntPtr t, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_array_sort_domain_n");
        var func = Marshal.GetDelegateForFunctionPointer<get_array_sort_domain_nDelegate>(funcPtr);
        return func(c, t, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_array_sort_rangeDelegate(IntPtr c, IntPtr t);

    internal IntPtr Z3_get_array_sort_range(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_array_sort_range");
        var func = Marshal.GetDelegateForFunctionPointer<get_array_sort_rangeDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_tuple_sort_mk_declDelegate(IntPtr c, IntPtr t);

    internal IntPtr Z3_get_tuple_sort_mk_decl(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_tuple_sort_mk_decl");
        var func = Marshal.GetDelegateForFunctionPointer<get_tuple_sort_mk_declDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_tuple_sort_num_fieldsDelegate(IntPtr c, IntPtr t);

    internal uint Z3_get_tuple_sort_num_fields(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_tuple_sort_num_fields");
        var func = Marshal.GetDelegateForFunctionPointer<get_tuple_sort_num_fieldsDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_tuple_sort_field_declDelegate(IntPtr c, IntPtr t, uint i);

    internal IntPtr Z3_get_tuple_sort_field_decl(IntPtr c, IntPtr t, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_tuple_sort_field_decl");
        var func = Marshal.GetDelegateForFunctionPointer<get_tuple_sort_field_declDelegate>(funcPtr);
        return func(c, t, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_recursive_datatype_sortDelegate(IntPtr c, IntPtr s);

    internal bool Z3_is_recursive_datatype_sort(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_is_recursive_datatype_sort");
        var func = Marshal.GetDelegateForFunctionPointer<is_recursive_datatype_sortDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_datatype_sort_num_constructorsDelegate(IntPtr c, IntPtr t);

    internal uint Z3_get_datatype_sort_num_constructors(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_datatype_sort_num_constructors");
        var func = Marshal.GetDelegateForFunctionPointer<get_datatype_sort_num_constructorsDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_datatype_sort_constructorDelegate(IntPtr c, IntPtr t, uint idx);

    internal IntPtr Z3_get_datatype_sort_constructor(IntPtr c, IntPtr t, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_datatype_sort_constructor");
        var func = Marshal.GetDelegateForFunctionPointer<get_datatype_sort_constructorDelegate>(funcPtr);
        return func(c, t, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_datatype_sort_recognizerDelegate(IntPtr c, IntPtr t, uint idx);

    internal IntPtr Z3_get_datatype_sort_recognizer(IntPtr c, IntPtr t, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_datatype_sort_recognizer");
        var func = Marshal.GetDelegateForFunctionPointer<get_datatype_sort_recognizerDelegate>(funcPtr);
        return func(c, t, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_datatype_sort_constructor_accessorDelegate(IntPtr c, IntPtr t, uint idx_c, uint idx_a);

    internal IntPtr Z3_get_datatype_sort_constructor_accessor(IntPtr c, IntPtr t, uint idx_c, uint idx_a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_datatype_sort_constructor_accessor");
        var func = Marshal.GetDelegateForFunctionPointer<get_datatype_sort_constructor_accessorDelegate>(funcPtr);
        return func(c, t, idx_c, idx_a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr datatype_update_fieldDelegate(IntPtr c, IntPtr field_access, IntPtr t, IntPtr value);

    internal IntPtr Z3_datatype_update_field(IntPtr c, IntPtr field_access, IntPtr t, IntPtr value)
    {
        var funcPtr = GetFunctionPointer("Z3_datatype_update_field");
        var func = Marshal.GetDelegateForFunctionPointer<datatype_update_fieldDelegate>(funcPtr);
        return func(c, field_access, t, value);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_relation_arityDelegate(IntPtr c, IntPtr s);

    internal uint Z3_get_relation_arity(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_get_relation_arity");
        var func = Marshal.GetDelegateForFunctionPointer<get_relation_arityDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_relation_columnDelegate(IntPtr c, IntPtr s, uint col);

    internal IntPtr Z3_get_relation_column(IntPtr c, IntPtr s, uint col)
    {
        var funcPtr = GetFunctionPointer("Z3_get_relation_column");
        var func = Marshal.GetDelegateForFunctionPointer<get_relation_columnDelegate>(funcPtr);
        return func(c, s, col);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_atmostDelegate(IntPtr c, uint num_args, IntPtr args, uint k);

    internal IntPtr Z3_mk_atmost(IntPtr c, uint num_args, IntPtr args, uint k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_atmost");
        var func = Marshal.GetDelegateForFunctionPointer<mk_atmostDelegate>(funcPtr);
        return func(c, num_args, args, k);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_atleastDelegate(IntPtr c, uint num_args, IntPtr args, uint k);

    internal IntPtr Z3_mk_atleast(IntPtr c, uint num_args, IntPtr args, uint k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_atleast");
        var func = Marshal.GetDelegateForFunctionPointer<mk_atleastDelegate>(funcPtr);
        return func(c, num_args, args, k);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_pbleDelegate(IntPtr c, uint num_args, IntPtr args, int coeffs, int k);

    internal IntPtr Z3_mk_pble(IntPtr c, uint num_args, IntPtr args, int coeffs, int k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_pble");
        var func = Marshal.GetDelegateForFunctionPointer<mk_pbleDelegate>(funcPtr);
        return func(c, num_args, args, coeffs, k);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_pbgeDelegate(IntPtr c, uint num_args, IntPtr args, int coeffs, int k);

    internal IntPtr Z3_mk_pbge(IntPtr c, uint num_args, IntPtr args, int coeffs, int k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_pbge");
        var func = Marshal.GetDelegateForFunctionPointer<mk_pbgeDelegate>(funcPtr);
        return func(c, num_args, args, coeffs, k);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_pbeqDelegate(IntPtr c, uint num_args, IntPtr args, int coeffs, int k);

    internal IntPtr Z3_mk_pbeq(IntPtr c, uint num_args, IntPtr args, int coeffs, int k)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_pbeq");
        var func = Marshal.GetDelegateForFunctionPointer<mk_pbeqDelegate>(funcPtr);
        return func(c, num_args, args, coeffs, k);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr func_decl_to_astDelegate(IntPtr c, IntPtr f);

    internal IntPtr Z3_func_decl_to_ast(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_decl_to_ast");
        var func = Marshal.GetDelegateForFunctionPointer<func_decl_to_astDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_eq_func_declDelegate(IntPtr c, IntPtr f1, IntPtr f2);

    internal bool Z3_is_eq_func_decl(IntPtr c, IntPtr f1, IntPtr f2)
    {
        var funcPtr = GetFunctionPointer("Z3_is_eq_func_decl");
        var func = Marshal.GetDelegateForFunctionPointer<is_eq_func_declDelegate>(funcPtr);
        return func(c, f1, f2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_func_decl_idDelegate(IntPtr c, IntPtr f);

    internal uint Z3_get_func_decl_id(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_get_func_decl_id");
        var func = Marshal.GetDelegateForFunctionPointer<get_func_decl_idDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_nameDelegate(IntPtr c, IntPtr d);

    internal IntPtr Z3_get_decl_name(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_name");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_nameDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_decl_kindDelegate(IntPtr c, IntPtr d);

    internal int Z3_get_decl_kind(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_kind");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_kindDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_domain_sizeDelegate(IntPtr c, IntPtr d);

    internal uint Z3_get_domain_size(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_domain_size");
        var func = Marshal.GetDelegateForFunctionPointer<get_domain_sizeDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_arityDelegate(IntPtr c, IntPtr d);

    internal uint Z3_get_arity(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_arity");
        var func = Marshal.GetDelegateForFunctionPointer<get_arityDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_domainDelegate(IntPtr c, IntPtr d, uint i);

    internal IntPtr Z3_get_domain(IntPtr c, IntPtr d, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_domain");
        var func = Marshal.GetDelegateForFunctionPointer<get_domainDelegate>(funcPtr);
        return func(c, d, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_rangeDelegate(IntPtr c, IntPtr d);

    internal IntPtr Z3_get_range(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_range");
        var func = Marshal.GetDelegateForFunctionPointer<get_rangeDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_decl_num_parametersDelegate(IntPtr c, IntPtr d);

    internal uint Z3_get_decl_num_parameters(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_num_parameters");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_num_parametersDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_decl_parameter_kindDelegate(IntPtr c, IntPtr d, uint idx);

    internal int Z3_get_decl_parameter_kind(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_parameter_kind");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_parameter_kindDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_decl_int_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal int Z3_get_decl_int_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_int_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_int_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate double get_decl_double_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal double Z3_get_decl_double_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_double_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_double_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_symbol_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal IntPtr Z3_get_decl_symbol_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_symbol_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_symbol_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_sort_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal IntPtr Z3_get_decl_sort_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_sort_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_sort_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_ast_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal IntPtr Z3_get_decl_ast_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_ast_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_ast_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_func_decl_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal IntPtr Z3_get_decl_func_decl_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_func_decl_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_func_decl_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_decl_rational_parameterDelegate(IntPtr c, IntPtr d, uint idx);

    internal IntPtr Z3_get_decl_rational_parameter(IntPtr c, IntPtr d, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_decl_rational_parameter");
        var func = Marshal.GetDelegateForFunctionPointer<get_decl_rational_parameterDelegate>(funcPtr);
        return func(c, d, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr app_to_astDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_app_to_ast(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_app_to_ast");
        var func = Marshal.GetDelegateForFunctionPointer<app_to_astDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_app_declDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_app_decl(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_app_decl");
        var func = Marshal.GetDelegateForFunctionPointer<get_app_declDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_app_num_argsDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_app_num_args(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_app_num_args");
        var func = Marshal.GetDelegateForFunctionPointer<get_app_num_argsDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_app_argDelegate(IntPtr c, IntPtr a, uint i);

    internal IntPtr Z3_get_app_arg(IntPtr c, IntPtr a, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_app_arg");
        var func = Marshal.GetDelegateForFunctionPointer<get_app_argDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_eq_astDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal bool Z3_is_eq_ast(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_is_eq_ast");
        var func = Marshal.GetDelegateForFunctionPointer<is_eq_astDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_ast_idDelegate(IntPtr c, IntPtr t);

    internal uint Z3_get_ast_id(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_get_ast_id");
        var func = Marshal.GetDelegateForFunctionPointer<get_ast_idDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_ast_hashDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_ast_hash(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_ast_hash");
        var func = Marshal.GetDelegateForFunctionPointer<get_ast_hashDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_sortDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_sort(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_sort");
        var func = Marshal.GetDelegateForFunctionPointer<get_sortDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_well_sortedDelegate(IntPtr c, IntPtr t);

    internal bool Z3_is_well_sorted(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_is_well_sorted");
        var func = Marshal.GetDelegateForFunctionPointer<is_well_sortedDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_bool_valueDelegate(IntPtr c, IntPtr a);

    internal int Z3_get_bool_value(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_bool_value");
        var func = Marshal.GetDelegateForFunctionPointer<get_bool_valueDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int get_ast_kindDelegate(IntPtr c, IntPtr a);

    internal int Z3_get_ast_kind(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_ast_kind");
        var func = Marshal.GetDelegateForFunctionPointer<get_ast_kindDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_appDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_app(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_app");
        var func = Marshal.GetDelegateForFunctionPointer<is_appDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_groundDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_ground(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_ground");
        var func = Marshal.GetDelegateForFunctionPointer<is_groundDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_depthDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_depth(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_depth");
        var func = Marshal.GetDelegateForFunctionPointer<get_depthDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_numeral_astDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_numeral_ast(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_numeral_ast");
        var func = Marshal.GetDelegateForFunctionPointer<is_numeral_astDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_algebraic_numberDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_algebraic_number(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_algebraic_number");
        var func = Marshal.GetDelegateForFunctionPointer<is_algebraic_numberDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr to_appDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_to_app(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_to_app");
        var func = Marshal.GetDelegateForFunctionPointer<to_appDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr to_func_declDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_to_func_decl(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_to_func_decl");
        var func = Marshal.GetDelegateForFunctionPointer<to_func_declDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_numeral_stringDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_numeral_string(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_string");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_stringDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_numeral_binary_stringDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_numeral_binary_string(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_binary_string");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_binary_stringDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_numeral_decimal_stringDelegate(IntPtr c, IntPtr a, uint precision);

    internal IntPtr Z3_get_numeral_decimal_string(IntPtr c, IntPtr a, uint precision)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_decimal_string");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_decimal_stringDelegate>(funcPtr);
        return func(c, a, precision);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate double get_numeral_doubleDelegate(IntPtr c, IntPtr a);

    internal double Z3_get_numeral_double(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_double");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_doubleDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_numeratorDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_numerator(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numerator");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeratorDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_denominatorDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_denominator(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_denominator");
        var func = Marshal.GetDelegateForFunctionPointer<get_denominatorDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_smallDelegate(IntPtr c, IntPtr a, IntPtr num, IntPtr den);

    internal bool Z3_get_numeral_small(IntPtr c, IntPtr a, IntPtr num, IntPtr den)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_small");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_smallDelegate>(funcPtr);
        return func(c, a, num, den);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_intDelegate(IntPtr c, IntPtr v, IntPtr i);

    internal bool Z3_get_numeral_int(IntPtr c, IntPtr v, IntPtr i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_int");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_intDelegate>(funcPtr);
        return func(c, v, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_uintDelegate(IntPtr c, IntPtr v, IntPtr u);

    internal bool Z3_get_numeral_uint(IntPtr c, IntPtr v, IntPtr u)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_uint");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_uintDelegate>(funcPtr);
        return func(c, v, u);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_uint64Delegate(IntPtr c, IntPtr v, IntPtr u);

    internal bool Z3_get_numeral_uint64(IntPtr c, IntPtr v, IntPtr u)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_uint64");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_uint64Delegate>(funcPtr);
        return func(c, v, u);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_int64Delegate(IntPtr c, IntPtr v, IntPtr i);

    internal bool Z3_get_numeral_int64(IntPtr c, IntPtr v, IntPtr i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_int64");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_int64Delegate>(funcPtr);
        return func(c, v, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool get_numeral_rational_int64Delegate(IntPtr c, IntPtr v, IntPtr num, IntPtr den);

    internal bool Z3_get_numeral_rational_int64(IntPtr c, IntPtr v, IntPtr num, IntPtr den)
    {
        var funcPtr = GetFunctionPointer("Z3_get_numeral_rational_int64");
        var func = Marshal.GetDelegateForFunctionPointer<get_numeral_rational_int64Delegate>(funcPtr);
        return func(c, v, num, den);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_algebraic_number_lowerDelegate(IntPtr c, IntPtr a, uint precision);

    internal IntPtr Z3_get_algebraic_number_lower(IntPtr c, IntPtr a, uint precision)
    {
        var funcPtr = GetFunctionPointer("Z3_get_algebraic_number_lower");
        var func = Marshal.GetDelegateForFunctionPointer<get_algebraic_number_lowerDelegate>(funcPtr);
        return func(c, a, precision);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_algebraic_number_upperDelegate(IntPtr c, IntPtr a, uint precision);

    internal IntPtr Z3_get_algebraic_number_upper(IntPtr c, IntPtr a, uint precision)
    {
        var funcPtr = GetFunctionPointer("Z3_get_algebraic_number_upper");
        var func = Marshal.GetDelegateForFunctionPointer<get_algebraic_number_upperDelegate>(funcPtr);
        return func(c, a, precision);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr pattern_to_astDelegate(IntPtr c, IntPtr p);

    internal IntPtr Z3_pattern_to_ast(IntPtr c, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_pattern_to_ast");
        var func = Marshal.GetDelegateForFunctionPointer<pattern_to_astDelegate>(funcPtr);
        return func(c, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_pattern_num_termsDelegate(IntPtr c, IntPtr p);

    internal uint Z3_get_pattern_num_terms(IntPtr c, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_get_pattern_num_terms");
        var func = Marshal.GetDelegateForFunctionPointer<get_pattern_num_termsDelegate>(funcPtr);
        return func(c, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_patternDelegate(IntPtr c, IntPtr p, uint idx);

    internal IntPtr Z3_get_pattern(IntPtr c, IntPtr p, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_get_pattern");
        var func = Marshal.GetDelegateForFunctionPointer<get_patternDelegate>(funcPtr);
        return func(c, p, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_index_valueDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_index_value(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_index_value");
        var func = Marshal.GetDelegateForFunctionPointer<get_index_valueDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_quantifier_forallDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_quantifier_forall(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_quantifier_forall");
        var func = Marshal.GetDelegateForFunctionPointer<is_quantifier_forallDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_quantifier_existsDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_quantifier_exists(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_quantifier_exists");
        var func = Marshal.GetDelegateForFunctionPointer<is_quantifier_existsDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_lambdaDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_lambda(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_lambda");
        var func = Marshal.GetDelegateForFunctionPointer<is_lambdaDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_quantifier_weightDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_quantifier_weight(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_weight");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_weightDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_skolem_idDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_quantifier_skolem_id(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_skolem_id");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_skolem_idDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_idDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_quantifier_id(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_id");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_idDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_quantifier_num_patternsDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_quantifier_num_patterns(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_num_patterns");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_num_patternsDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_pattern_astDelegate(IntPtr c, IntPtr a, uint i);

    internal IntPtr Z3_get_quantifier_pattern_ast(IntPtr c, IntPtr a, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_pattern_ast");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_pattern_astDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_quantifier_num_no_patternsDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_quantifier_num_no_patterns(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_num_no_patterns");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_num_no_patternsDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_no_pattern_astDelegate(IntPtr c, IntPtr a, uint i);

    internal IntPtr Z3_get_quantifier_no_pattern_ast(IntPtr c, IntPtr a, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_no_pattern_ast");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_no_pattern_astDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint get_quantifier_num_boundDelegate(IntPtr c, IntPtr a);

    internal uint Z3_get_quantifier_num_bound(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_num_bound");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_num_boundDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_bound_nameDelegate(IntPtr c, IntPtr a, uint i);

    internal IntPtr Z3_get_quantifier_bound_name(IntPtr c, IntPtr a, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_bound_name");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_bound_nameDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_bound_sortDelegate(IntPtr c, IntPtr a, uint i);

    internal IntPtr Z3_get_quantifier_bound_sort(IntPtr c, IntPtr a, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_bound_sort");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_bound_sortDelegate>(funcPtr);
        return func(c, a, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_quantifier_bodyDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_quantifier_body(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_quantifier_body");
        var func = Marshal.GetDelegateForFunctionPointer<get_quantifier_bodyDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr simplifyDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_simplify(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_simplify");
        var func = Marshal.GetDelegateForFunctionPointer<simplifyDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr simplify_exDelegate(IntPtr c, IntPtr a, IntPtr p);

    internal IntPtr Z3_simplify_ex(IntPtr c, IntPtr a, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_simplify_ex");
        var func = Marshal.GetDelegateForFunctionPointer<simplify_exDelegate>(funcPtr);
        return func(c, a, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr simplify_get_helpDelegate(IntPtr c);

    internal IntPtr Z3_simplify_get_help(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_simplify_get_help");
        var func = Marshal.GetDelegateForFunctionPointer<simplify_get_helpDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr simplify_get_param_descrsDelegate(IntPtr c);

    internal IntPtr Z3_simplify_get_param_descrs(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_simplify_get_param_descrs");
        var func = Marshal.GetDelegateForFunctionPointer<simplify_get_param_descrsDelegate>(funcPtr);
        return func(c);
    }

}
