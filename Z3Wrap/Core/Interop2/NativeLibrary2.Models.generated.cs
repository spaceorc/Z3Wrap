// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Models
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsModels(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_model");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_eval");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_const_interp");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_has_interp");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_func_interp");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_num_consts");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_const_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_num_funcs");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_func_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_num_sorts");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_get_sort_universe");
        LoadFunctionOrNull(handle, functionPointers, "Z3_model_translate");
        LoadFunctionOrNull(handle, functionPointers, "Z3_is_as_array");
        LoadFunctionOrNull(handle, functionPointers, "Z3_get_as_array_func_decl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_add_func_interp");
        LoadFunctionOrNull(handle, functionPointers, "Z3_add_const_interp");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_get_num_entries");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_get_entry");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_get_else");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_set_else");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_get_arity");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_interp_add_entry");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_entry_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_entry_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_entry_get_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_entry_get_num_args");
        LoadFunctionOrNull(handle, functionPointers, "Z3_func_entry_get_arg");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_modelDelegate(IntPtr c);

    internal IntPtr Z3_mk_model(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_model");
        var func = Marshal.GetDelegateForFunctionPointer<mk_modelDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void model_inc_refDelegate(IntPtr c, IntPtr m);

    internal void Z3_model_inc_ref(IntPtr c, IntPtr m)
    {
        var funcPtr = GetFunctionPointer("Z3_model_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<model_inc_refDelegate>(funcPtr);
        func(c, m);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void model_dec_refDelegate(IntPtr c, IntPtr m);

    internal void Z3_model_dec_ref(IntPtr c, IntPtr m)
    {
        var funcPtr = GetFunctionPointer("Z3_model_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<model_dec_refDelegate>(funcPtr);
        func(c, m);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool model_evalDelegate(IntPtr c, IntPtr m, IntPtr t, bool model_completion, IntPtr v);

    internal bool Z3_model_eval(IntPtr c, IntPtr m, IntPtr t, bool model_completion, IntPtr v)
    {
        var funcPtr = GetFunctionPointer("Z3_model_eval");
        var func = Marshal.GetDelegateForFunctionPointer<model_evalDelegate>(funcPtr);
        return func(c, m, t, model_completion, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_const_interpDelegate(IntPtr c, IntPtr m, IntPtr a);

    internal IntPtr Z3_model_get_const_interp(IntPtr c, IntPtr m, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_const_interp");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_const_interpDelegate>(funcPtr);
        return func(c, m, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool model_has_interpDelegate(IntPtr c, IntPtr m, IntPtr a);

    internal bool Z3_model_has_interp(IntPtr c, IntPtr m, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_model_has_interp");
        var func = Marshal.GetDelegateForFunctionPointer<model_has_interpDelegate>(funcPtr);
        return func(c, m, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_func_interpDelegate(IntPtr c, IntPtr m, IntPtr f);

    internal IntPtr Z3_model_get_func_interp(IntPtr c, IntPtr m, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_func_interp");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_func_interpDelegate>(funcPtr);
        return func(c, m, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint model_get_num_constsDelegate(IntPtr c, IntPtr m);

    internal uint Z3_model_get_num_consts(IntPtr c, IntPtr m)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_num_consts");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_num_constsDelegate>(funcPtr);
        return func(c, m);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_const_declDelegate(IntPtr c, IntPtr m, uint i);

    internal IntPtr Z3_model_get_const_decl(IntPtr c, IntPtr m, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_const_decl");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_const_declDelegate>(funcPtr);
        return func(c, m, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint model_get_num_funcsDelegate(IntPtr c, IntPtr m);

    internal uint Z3_model_get_num_funcs(IntPtr c, IntPtr m)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_num_funcs");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_num_funcsDelegate>(funcPtr);
        return func(c, m);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_func_declDelegate(IntPtr c, IntPtr m, uint i);

    internal IntPtr Z3_model_get_func_decl(IntPtr c, IntPtr m, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_func_decl");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_func_declDelegate>(funcPtr);
        return func(c, m, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint model_get_num_sortsDelegate(IntPtr c, IntPtr m);

    internal uint Z3_model_get_num_sorts(IntPtr c, IntPtr m)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_num_sorts");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_num_sortsDelegate>(funcPtr);
        return func(c, m);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_sortDelegate(IntPtr c, IntPtr m, uint i);

    internal IntPtr Z3_model_get_sort(IntPtr c, IntPtr m, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_sort");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_sortDelegate>(funcPtr);
        return func(c, m, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_get_sort_universeDelegate(IntPtr c, IntPtr m, IntPtr s);

    internal IntPtr Z3_model_get_sort_universe(IntPtr c, IntPtr m, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_model_get_sort_universe");
        var func = Marshal.GetDelegateForFunctionPointer<model_get_sort_universeDelegate>(funcPtr);
        return func(c, m, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr model_translateDelegate(IntPtr c, IntPtr m, IntPtr dst);

    internal IntPtr Z3_model_translate(IntPtr c, IntPtr m, IntPtr dst)
    {
        var funcPtr = GetFunctionPointer("Z3_model_translate");
        var func = Marshal.GetDelegateForFunctionPointer<model_translateDelegate>(funcPtr);
        return func(c, m, dst);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate bool is_as_arrayDelegate(IntPtr c, IntPtr a);

    internal bool Z3_is_as_array(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_is_as_array");
        var func = Marshal.GetDelegateForFunctionPointer<is_as_arrayDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr get_as_array_func_declDelegate(IntPtr c, IntPtr a);

    internal IntPtr Z3_get_as_array_func_decl(IntPtr c, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_get_as_array_func_decl");
        var func = Marshal.GetDelegateForFunctionPointer<get_as_array_func_declDelegate>(funcPtr);
        return func(c, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr add_func_interpDelegate(IntPtr c, IntPtr m, IntPtr f, IntPtr default_value);

    internal IntPtr Z3_add_func_interp(IntPtr c, IntPtr m, IntPtr f, IntPtr default_value)
    {
        var funcPtr = GetFunctionPointer("Z3_add_func_interp");
        var func = Marshal.GetDelegateForFunctionPointer<add_func_interpDelegate>(funcPtr);
        return func(c, m, f, default_value);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void add_const_interpDelegate(IntPtr c, IntPtr m, IntPtr f, IntPtr a);

    internal void Z3_add_const_interp(IntPtr c, IntPtr m, IntPtr f, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_add_const_interp");
        var func = Marshal.GetDelegateForFunctionPointer<add_const_interpDelegate>(funcPtr);
        func(c, m, f, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_interp_inc_refDelegate(IntPtr c, IntPtr f);

    internal void Z3_func_interp_inc_ref(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_inc_refDelegate>(funcPtr);
        func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_interp_dec_refDelegate(IntPtr c, IntPtr f);

    internal void Z3_func_interp_dec_ref(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_dec_refDelegate>(funcPtr);
        func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint func_interp_get_num_entriesDelegate(IntPtr c, IntPtr f);

    internal uint Z3_func_interp_get_num_entries(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_get_num_entries");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_get_num_entriesDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr func_interp_get_entryDelegate(IntPtr c, IntPtr f, uint i);

    internal IntPtr Z3_func_interp_get_entry(IntPtr c, IntPtr f, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_get_entry");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_get_entryDelegate>(funcPtr);
        return func(c, f, i);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr func_interp_get_elseDelegate(IntPtr c, IntPtr f);

    internal IntPtr Z3_func_interp_get_else(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_get_else");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_get_elseDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_interp_set_elseDelegate(IntPtr c, IntPtr f, IntPtr else_value);

    internal void Z3_func_interp_set_else(IntPtr c, IntPtr f, IntPtr else_value)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_set_else");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_set_elseDelegate>(funcPtr);
        func(c, f, else_value);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint func_interp_get_arityDelegate(IntPtr c, IntPtr f);

    internal uint Z3_func_interp_get_arity(IntPtr c, IntPtr f)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_get_arity");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_get_arityDelegate>(funcPtr);
        return func(c, f);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_interp_add_entryDelegate(IntPtr c, IntPtr fi, IntPtr args, IntPtr value);

    internal void Z3_func_interp_add_entry(IntPtr c, IntPtr fi, IntPtr args, IntPtr value)
    {
        var funcPtr = GetFunctionPointer("Z3_func_interp_add_entry");
        var func = Marshal.GetDelegateForFunctionPointer<func_interp_add_entryDelegate>(funcPtr);
        func(c, fi, args, value);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_entry_inc_refDelegate(IntPtr c, IntPtr e);

    internal void Z3_func_entry_inc_ref(IntPtr c, IntPtr e)
    {
        var funcPtr = GetFunctionPointer("Z3_func_entry_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<func_entry_inc_refDelegate>(funcPtr);
        func(c, e);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void func_entry_dec_refDelegate(IntPtr c, IntPtr e);

    internal void Z3_func_entry_dec_ref(IntPtr c, IntPtr e)
    {
        var funcPtr = GetFunctionPointer("Z3_func_entry_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<func_entry_dec_refDelegate>(funcPtr);
        func(c, e);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr func_entry_get_valueDelegate(IntPtr c, IntPtr e);

    internal IntPtr Z3_func_entry_get_value(IntPtr c, IntPtr e)
    {
        var funcPtr = GetFunctionPointer("Z3_func_entry_get_value");
        var func = Marshal.GetDelegateForFunctionPointer<func_entry_get_valueDelegate>(funcPtr);
        return func(c, e);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint func_entry_get_num_argsDelegate(IntPtr c, IntPtr e);

    internal uint Z3_func_entry_get_num_args(IntPtr c, IntPtr e)
    {
        var funcPtr = GetFunctionPointer("Z3_func_entry_get_num_args");
        var func = Marshal.GetDelegateForFunctionPointer<func_entry_get_num_argsDelegate>(funcPtr);
        return func(c, e);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr func_entry_get_argDelegate(IntPtr c, IntPtr e, uint i);

    internal IntPtr Z3_func_entry_get_arg(IntPtr c, IntPtr e, uint i)
    {
        var funcPtr = GetFunctionPointer("Z3_func_entry_get_arg");
        var func = Marshal.GetDelegateForFunctionPointer<func_entry_get_argDelegate>(funcPtr);
        return func(c, e, i);
    }

}
