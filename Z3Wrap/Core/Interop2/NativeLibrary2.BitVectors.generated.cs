// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Bit-vectors
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsBitVectors(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvnot");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvredand");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvredor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvand");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvxor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvnand");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvnor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvxnor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvneg");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvadd");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsub");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvmul");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvudiv");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsdiv");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvurem");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsrem");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsmod");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvult");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvslt");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvule");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsle");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvuge");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsge");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvugt");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsgt");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_concat");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_extract");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_sign_ext");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_zero_ext");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_repeat");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bit2bool");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvshl");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvlshr");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvashr");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_rotate_left");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_rotate_right");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_ext_rotate_left");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_ext_rotate_right");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_int2bv");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bv2int");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvadd_no_overflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvadd_no_underflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsub_no_overflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsub_no_underflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvsdiv_no_overflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvneg_no_overflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvmul_no_overflow");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bvmul_no_underflow");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvnotDelegate(IntPtr c, IntPtr t1);

    internal IntPtr Z3_mk_bvnot(IntPtr c, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvnot");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvnotDelegate>(funcPtr);
        return func(c, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvredandDelegate(IntPtr c, IntPtr t1);

    internal IntPtr Z3_mk_bvredand(IntPtr c, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvredand");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvredandDelegate>(funcPtr);
        return func(c, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvredorDelegate(IntPtr c, IntPtr t1);

    internal IntPtr Z3_mk_bvredor(IntPtr c, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvredor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvredorDelegate>(funcPtr);
        return func(c, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvandDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvand(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvand");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvandDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvorDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvor(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvorDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvxorDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvxor(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvxor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvxorDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvnandDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvnand(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvnand");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvnandDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvnorDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvnor(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvnor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvnorDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvxnorDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvxnor(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvxnor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvxnorDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvnegDelegate(IntPtr c, IntPtr t1);

    internal IntPtr Z3_mk_bvneg(IntPtr c, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvneg");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvnegDelegate>(funcPtr);
        return func(c, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvaddDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvadd(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvadd");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvaddDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsubDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsub(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsub");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsubDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvmulDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvmul(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvmul");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvmulDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvudivDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvudiv(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvudiv");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvudivDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsdivDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsdiv(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsdiv");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsdivDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvuremDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvurem(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvurem");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvuremDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsremDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsrem(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsrem");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsremDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsmodDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsmod(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsmod");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsmodDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvultDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvult(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvult");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvultDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsltDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvslt(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvslt");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsltDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvuleDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvule(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvule");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvuleDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsleDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsle(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsle");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsleDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvugeDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvuge(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvuge");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvugeDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsgeDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsge(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsge");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsgeDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvugtDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvugt(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvugt");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvugtDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsgtDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsgt(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsgt");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsgtDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_concatDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_concat(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_concat");
        var func = Marshal.GetDelegateForFunctionPointer<mk_concatDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_extractDelegate(IntPtr c, uint high, uint low, IntPtr t1);

    internal IntPtr Z3_mk_extract(IntPtr c, uint high, uint low, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_extract");
        var func = Marshal.GetDelegateForFunctionPointer<mk_extractDelegate>(funcPtr);
        return func(c, high, low, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_sign_extDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_sign_ext(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_sign_ext");
        var func = Marshal.GetDelegateForFunctionPointer<mk_sign_extDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_zero_extDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_zero_ext(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_zero_ext");
        var func = Marshal.GetDelegateForFunctionPointer<mk_zero_extDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_repeatDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_repeat(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_repeat");
        var func = Marshal.GetDelegateForFunctionPointer<mk_repeatDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bit2boolDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_bit2bool(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bit2bool");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bit2boolDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvshlDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvshl(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvshl");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvshlDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvlshrDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvlshr(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvlshr");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvlshrDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvashrDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvashr(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvashr");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvashrDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_rotate_leftDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_rotate_left(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_rotate_left");
        var func = Marshal.GetDelegateForFunctionPointer<mk_rotate_leftDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_rotate_rightDelegate(IntPtr c, uint i, IntPtr t1);

    internal IntPtr Z3_mk_rotate_right(IntPtr c, uint i, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_rotate_right");
        var func = Marshal.GetDelegateForFunctionPointer<mk_rotate_rightDelegate>(funcPtr);
        return func(c, i, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_ext_rotate_leftDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_ext_rotate_left(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_ext_rotate_left");
        var func = Marshal.GetDelegateForFunctionPointer<mk_ext_rotate_leftDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_ext_rotate_rightDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_ext_rotate_right(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_ext_rotate_right");
        var func = Marshal.GetDelegateForFunctionPointer<mk_ext_rotate_rightDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_int2bvDelegate(IntPtr c, uint n, IntPtr t1);

    internal IntPtr Z3_mk_int2bv(IntPtr c, uint n, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_int2bv");
        var func = Marshal.GetDelegateForFunctionPointer<mk_int2bvDelegate>(funcPtr);
        return func(c, n, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bv2intDelegate(IntPtr c, IntPtr t1, bool is_signed);

    internal IntPtr Z3_mk_bv2int(IntPtr c, IntPtr t1, bool is_signed)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bv2int");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bv2intDelegate>(funcPtr);
        return func(c, t1, is_signed);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvadd_no_overflowDelegate(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed);

    internal IntPtr Z3_mk_bvadd_no_overflow(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvadd_no_overflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvadd_no_overflowDelegate>(funcPtr);
        return func(c, t1, t2, is_signed);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvadd_no_underflowDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvadd_no_underflow(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvadd_no_underflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvadd_no_underflowDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsub_no_overflowDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsub_no_overflow(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsub_no_overflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsub_no_overflowDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsub_no_underflowDelegate(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed);

    internal IntPtr Z3_mk_bvsub_no_underflow(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsub_no_underflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsub_no_underflowDelegate>(funcPtr);
        return func(c, t1, t2, is_signed);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvsdiv_no_overflowDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvsdiv_no_overflow(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvsdiv_no_overflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvsdiv_no_overflowDelegate>(funcPtr);
        return func(c, t1, t2);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvneg_no_overflowDelegate(IntPtr c, IntPtr t1);

    internal IntPtr Z3_mk_bvneg_no_overflow(IntPtr c, IntPtr t1)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvneg_no_overflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvneg_no_overflowDelegate>(funcPtr);
        return func(c, t1);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvmul_no_overflowDelegate(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed);

    internal IntPtr Z3_mk_bvmul_no_overflow(IntPtr c, IntPtr t1, IntPtr t2, bool is_signed)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvmul_no_overflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvmul_no_overflowDelegate>(funcPtr);
        return func(c, t1, t2, is_signed);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bvmul_no_underflowDelegate(IntPtr c, IntPtr t1, IntPtr t2);

    internal IntPtr Z3_mk_bvmul_no_underflow(IntPtr c, IntPtr t1, IntPtr t2)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bvmul_no_underflow");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bvmul_no_underflowDelegate>(funcPtr);
        return func(c, t1, t2);
    }

}
