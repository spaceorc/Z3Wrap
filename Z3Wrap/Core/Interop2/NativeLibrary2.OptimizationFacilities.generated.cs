// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_optimization.h / Optimization facilities
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsOptimizationFacilities(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_optimize");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_assert");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_assert_and_track");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_assert_soft");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_maximize");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_minimize");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_push");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_pop");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_set_initial_value");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_check");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_reason_unknown");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_model");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_unsat_core");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_set_params");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_param_descrs");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_lower");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_upper");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_lower_as_vector");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_upper_as_vector");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_to_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_from_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_from_file");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_help");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_statistics");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_assertions");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_get_objectives");
        LoadFunctionOrNull(handle, functionPointers, "Z3_optimize_register_model_eh");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_optimizeDelegate(IntPtr c);

    internal IntPtr Z3_mk_optimize(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_optimize");
        var func = Marshal.GetDelegateForFunctionPointer<mk_optimizeDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_inc_refDelegate(IntPtr c, IntPtr d);

    internal void Z3_optimize_inc_ref(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_inc_refDelegate>(funcPtr);
        func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_dec_refDelegate(IntPtr c, IntPtr d);

    internal void Z3_optimize_dec_ref(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_dec_refDelegate>(funcPtr);
        func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_assertDelegate(IntPtr c, IntPtr o, IntPtr a);

    internal void Z3_optimize_assert(IntPtr c, IntPtr o, IntPtr a)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_assert");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_assertDelegate>(funcPtr);
        func(c, o, a);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_assert_and_trackDelegate(IntPtr c, IntPtr o, IntPtr a, IntPtr t);

    internal void Z3_optimize_assert_and_track(IntPtr c, IntPtr o, IntPtr a, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_assert_and_track");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_assert_and_trackDelegate>(funcPtr);
        func(c, o, a, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint optimize_assert_softDelegate(IntPtr c, IntPtr o, IntPtr a, IntPtr weight, IntPtr id);

    internal uint Z3_optimize_assert_soft(IntPtr c, IntPtr o, IntPtr a, IntPtr weight, IntPtr id)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_assert_soft");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_assert_softDelegate>(funcPtr);
        return func(c, o, a, weight, id);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint optimize_maximizeDelegate(IntPtr c, IntPtr o, IntPtr t);

    internal uint Z3_optimize_maximize(IntPtr c, IntPtr o, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_maximize");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_maximizeDelegate>(funcPtr);
        return func(c, o, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint optimize_minimizeDelegate(IntPtr c, IntPtr o, IntPtr t);

    internal uint Z3_optimize_minimize(IntPtr c, IntPtr o, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_minimize");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_minimizeDelegate>(funcPtr);
        return func(c, o, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_pushDelegate(IntPtr c, IntPtr d);

    internal void Z3_optimize_push(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_push");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_pushDelegate>(funcPtr);
        func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_popDelegate(IntPtr c, IntPtr d);

    internal void Z3_optimize_pop(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_pop");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_popDelegate>(funcPtr);
        func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_set_initial_valueDelegate(IntPtr c, IntPtr o, IntPtr v, IntPtr val);

    internal void Z3_optimize_set_initial_value(IntPtr c, IntPtr o, IntPtr v, IntPtr val)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_set_initial_value");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_set_initial_valueDelegate>(funcPtr);
        func(c, o, v, val);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate int optimize_checkDelegate(IntPtr c, IntPtr o, uint num_assumptions, IntPtr assumptions);

    internal int Z3_optimize_check(IntPtr c, IntPtr o, uint num_assumptions, IntPtr assumptions)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_check");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_checkDelegate>(funcPtr);
        return func(c, o, num_assumptions, assumptions);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_reason_unknownDelegate(IntPtr c, IntPtr d);

    internal IntPtr Z3_optimize_get_reason_unknown(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_reason_unknown");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_reason_unknownDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_modelDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_get_model(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_model");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_modelDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_unsat_coreDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_get_unsat_core(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_unsat_core");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_unsat_coreDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_set_paramsDelegate(IntPtr c, IntPtr o, IntPtr p);

    internal void Z3_optimize_set_params(IntPtr c, IntPtr o, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_set_params");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_set_paramsDelegate>(funcPtr);
        func(c, o, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_param_descrsDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_get_param_descrs(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_param_descrs");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_param_descrsDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_lowerDelegate(IntPtr c, IntPtr o, uint idx);

    internal IntPtr Z3_optimize_get_lower(IntPtr c, IntPtr o, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_lower");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_lowerDelegate>(funcPtr);
        return func(c, o, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_upperDelegate(IntPtr c, IntPtr o, uint idx);

    internal IntPtr Z3_optimize_get_upper(IntPtr c, IntPtr o, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_upper");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_upperDelegate>(funcPtr);
        return func(c, o, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_lower_as_vectorDelegate(IntPtr c, IntPtr o, uint idx);

    internal IntPtr Z3_optimize_get_lower_as_vector(IntPtr c, IntPtr o, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_lower_as_vector");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_lower_as_vectorDelegate>(funcPtr);
        return func(c, o, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_upper_as_vectorDelegate(IntPtr c, IntPtr o, uint idx);

    internal IntPtr Z3_optimize_get_upper_as_vector(IntPtr c, IntPtr o, uint idx)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_upper_as_vector");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_upper_as_vectorDelegate>(funcPtr);
        return func(c, o, idx);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_to_stringDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_to_string(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_to_string");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_to_stringDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_from_stringDelegate(IntPtr c, IntPtr o, IntPtr s);

    internal void Z3_optimize_from_string(IntPtr c, IntPtr o, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_from_string");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_from_stringDelegate>(funcPtr);
        func(c, o, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_from_fileDelegate(IntPtr c, IntPtr o, IntPtr s);

    internal void Z3_optimize_from_file(IntPtr c, IntPtr o, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_from_file");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_from_fileDelegate>(funcPtr);
        func(c, o, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_helpDelegate(IntPtr c, IntPtr t);

    internal IntPtr Z3_optimize_get_help(IntPtr c, IntPtr t)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_help");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_helpDelegate>(funcPtr);
        return func(c, t);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_statisticsDelegate(IntPtr c, IntPtr d);

    internal IntPtr Z3_optimize_get_statistics(IntPtr c, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_statistics");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_statisticsDelegate>(funcPtr);
        return func(c, d);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_assertionsDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_get_assertions(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_assertions");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_assertionsDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr optimize_get_objectivesDelegate(IntPtr c, IntPtr o);

    internal IntPtr Z3_optimize_get_objectives(IntPtr c, IntPtr o)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_get_objectives");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_get_objectivesDelegate>(funcPtr);
        return func(c, o);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void optimize_register_model_ehDelegate(IntPtr c, IntPtr o, IntPtr m, IntPtr ctx, IntPtr model_eh);

    internal void Z3_optimize_register_model_eh(IntPtr c, IntPtr o, IntPtr m, IntPtr ctx, IntPtr model_eh)
    {
        var funcPtr = GetFunctionPointer("Z3_optimize_register_model_eh");
        var func = Marshal.GetDelegateForFunctionPointer<optimize_register_model_ehDelegate>(funcPtr);
        func(c, o, m, ctx, model_eh);
    }

}
