// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Sorts
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsSorts(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_uninterpreted_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_type_variable");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bool_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_int_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_real_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_bv_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_finite_domain_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_array_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_array_sort_n");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_tuple_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_enumeration_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_list_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_constructor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_constructor_num_fields");
        LoadFunctionOrNull(handle, functionPointers, "Z3_del_constructor");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_datatype");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_datatype_sort");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_constructor_list");
        LoadFunctionOrNull(handle, functionPointers, "Z3_del_constructor_list");
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_datatypes");
        LoadFunctionOrNull(handle, functionPointers, "Z3_query_constructor");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_uninterpreted_sortDelegate(IntPtr c, IntPtr s);

    internal IntPtr Z3_mk_uninterpreted_sort(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_uninterpreted_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_uninterpreted_sortDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_type_variableDelegate(IntPtr c, IntPtr s);

    internal IntPtr Z3_mk_type_variable(IntPtr c, IntPtr s)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_type_variable");
        var func = Marshal.GetDelegateForFunctionPointer<mk_type_variableDelegate>(funcPtr);
        return func(c, s);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bool_sortDelegate(IntPtr c);

    internal IntPtr Z3_mk_bool_sort(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bool_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bool_sortDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_int_sortDelegate(IntPtr c);

    internal IntPtr Z3_mk_int_sort(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_int_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_int_sortDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_real_sortDelegate(IntPtr c);

    internal IntPtr Z3_mk_real_sort(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_real_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_real_sortDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_bv_sortDelegate(IntPtr c, uint sz);

    internal IntPtr Z3_mk_bv_sort(IntPtr c, uint sz)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_bv_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_bv_sortDelegate>(funcPtr);
        return func(c, sz);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_finite_domain_sortDelegate(IntPtr c, IntPtr name, ulong size);

    internal IntPtr Z3_mk_finite_domain_sort(IntPtr c, IntPtr name, ulong size)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_finite_domain_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_finite_domain_sortDelegate>(funcPtr);
        return func(c, name, size);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_array_sortDelegate(IntPtr c, IntPtr domain, IntPtr range);

    internal IntPtr Z3_mk_array_sort(IntPtr c, IntPtr domain, IntPtr range)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_array_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_array_sortDelegate>(funcPtr);
        return func(c, domain, range);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_array_sort_nDelegate(IntPtr c, uint n, IntPtr domain, IntPtr range);

    internal IntPtr Z3_mk_array_sort_n(IntPtr c, uint n, IntPtr domain, IntPtr range)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_array_sort_n");
        var func = Marshal.GetDelegateForFunctionPointer<mk_array_sort_nDelegate>(funcPtr);
        return func(c, n, domain, range);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_tuple_sortDelegate(IntPtr c, IntPtr mk_tuple_name, uint num_fields, IntPtr field_names, IntPtr field_sorts, IntPtr mk_tuple_decl, IntPtr proj_decl);

    internal IntPtr Z3_mk_tuple_sort(IntPtr c, IntPtr mk_tuple_name, uint num_fields, IntPtr field_names, IntPtr field_sorts, IntPtr mk_tuple_decl, IntPtr proj_decl)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_tuple_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_tuple_sortDelegate>(funcPtr);
        return func(c, mk_tuple_name, num_fields, field_names, field_sorts, mk_tuple_decl, proj_decl);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_enumeration_sortDelegate(IntPtr c, IntPtr name, uint n, IntPtr enum_names, IntPtr enum_consts, IntPtr enum_testers);

    internal IntPtr Z3_mk_enumeration_sort(IntPtr c, IntPtr name, uint n, IntPtr enum_names, IntPtr enum_consts, IntPtr enum_testers)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_enumeration_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_enumeration_sortDelegate>(funcPtr);
        return func(c, name, n, enum_names, enum_consts, enum_testers);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_list_sortDelegate(IntPtr c, IntPtr name, IntPtr elem_sort, IntPtr nil_decl, IntPtr is_nil_decl, IntPtr cons_decl, IntPtr is_cons_decl, IntPtr head_decl, IntPtr tail_decl);

    internal IntPtr Z3_mk_list_sort(IntPtr c, IntPtr name, IntPtr elem_sort, IntPtr nil_decl, IntPtr is_nil_decl, IntPtr cons_decl, IntPtr is_cons_decl, IntPtr head_decl, IntPtr tail_decl)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_list_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_list_sortDelegate>(funcPtr);
        return func(c, name, elem_sort, nil_decl, is_nil_decl, cons_decl, is_cons_decl, head_decl, tail_decl);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_constructorDelegate(IntPtr c, IntPtr name, IntPtr recognizer, uint num_fields, IntPtr field_names, IntPtr sorts, uint sort_refs);

    internal IntPtr Z3_mk_constructor(IntPtr c, IntPtr name, IntPtr recognizer, uint num_fields, IntPtr field_names, IntPtr sorts, uint sort_refs)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_constructor");
        var func = Marshal.GetDelegateForFunctionPointer<mk_constructorDelegate>(funcPtr);
        return func(c, name, recognizer, num_fields, field_names, sorts, sort_refs);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate uint constructor_num_fieldsDelegate(IntPtr c, IntPtr constr);

    internal uint Z3_constructor_num_fields(IntPtr c, IntPtr constr)
    {
        var funcPtr = GetFunctionPointer("Z3_constructor_num_fields");
        var func = Marshal.GetDelegateForFunctionPointer<constructor_num_fieldsDelegate>(funcPtr);
        return func(c, constr);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void del_constructorDelegate(IntPtr c, IntPtr constr);

    internal void Z3_del_constructor(IntPtr c, IntPtr constr)
    {
        var funcPtr = GetFunctionPointer("Z3_del_constructor");
        var func = Marshal.GetDelegateForFunctionPointer<del_constructorDelegate>(funcPtr);
        func(c, constr);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_datatypeDelegate(IntPtr c, IntPtr name, uint num_constructors, IntPtr constructors);

    internal IntPtr Z3_mk_datatype(IntPtr c, IntPtr name, uint num_constructors, IntPtr constructors)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_datatype");
        var func = Marshal.GetDelegateForFunctionPointer<mk_datatypeDelegate>(funcPtr);
        return func(c, name, num_constructors, constructors);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_datatype_sortDelegate(IntPtr c, IntPtr name);

    internal IntPtr Z3_mk_datatype_sort(IntPtr c, IntPtr name)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_datatype_sort");
        var func = Marshal.GetDelegateForFunctionPointer<mk_datatype_sortDelegate>(funcPtr);
        return func(c, name);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_constructor_listDelegate(IntPtr c, uint num_constructors, IntPtr constructors);

    internal IntPtr Z3_mk_constructor_list(IntPtr c, uint num_constructors, IntPtr constructors)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_constructor_list");
        var func = Marshal.GetDelegateForFunctionPointer<mk_constructor_listDelegate>(funcPtr);
        return func(c, num_constructors, constructors);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void del_constructor_listDelegate(IntPtr c, IntPtr clist);

    internal void Z3_del_constructor_list(IntPtr c, IntPtr clist)
    {
        var funcPtr = GetFunctionPointer("Z3_del_constructor_list");
        var func = Marshal.GetDelegateForFunctionPointer<del_constructor_listDelegate>(funcPtr);
        func(c, clist);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void mk_datatypesDelegate(IntPtr c, uint num_sorts, IntPtr sort_names, IntPtr sorts, IntPtr constructor_lists);

    internal void Z3_mk_datatypes(IntPtr c, uint num_sorts, IntPtr sort_names, IntPtr sorts, IntPtr constructor_lists)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_datatypes");
        var func = Marshal.GetDelegateForFunctionPointer<mk_datatypesDelegate>(funcPtr);
        func(c, num_sorts, sort_names, sorts, constructor_lists);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void query_constructorDelegate(IntPtr c, IntPtr constr, uint num_fields, IntPtr constructor, IntPtr tester, IntPtr accessors);

    internal void Z3_query_constructor(IntPtr c, IntPtr constr, uint num_fields, IntPtr constructor, IntPtr tester, IntPtr accessors)
    {
        var funcPtr = GetFunctionPointer("Z3_query_constructor");
        var func = Marshal.GetDelegateForFunctionPointer<query_constructorDelegate>(funcPtr);
        func(c, constr, num_fields, constructor, tester, accessors);
    }

}
