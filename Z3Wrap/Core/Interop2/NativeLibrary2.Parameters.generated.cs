// <auto-generated>
// This file was generated by scripts/generate_native_library.py
// Source: z3_api.h / Parameters
// DO NOT EDIT - Changes will be overwritten
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace Spaceorc.Z3Wrap.Core.Interop2;

internal sealed partial class NativeLibrary2
{
    private static void LoadFunctionsParameters(IntPtr handle, Dictionary<string, IntPtr> functionPointers)
    {
        LoadFunctionOrNull(handle, functionPointers, "Z3_mk_params");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_inc_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_dec_ref");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_set_bool");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_set_uint");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_set_double");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_set_symbol");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_to_string");
        LoadFunctionOrNull(handle, functionPointers, "Z3_params_validate");
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr mk_paramsDelegate(IntPtr c);

    internal IntPtr Z3_mk_params(IntPtr c)
    {
        var funcPtr = GetFunctionPointer("Z3_mk_params");
        var func = Marshal.GetDelegateForFunctionPointer<mk_paramsDelegate>(funcPtr);
        return func(c);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_inc_refDelegate(IntPtr c, IntPtr p);

    internal void Z3_params_inc_ref(IntPtr c, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_params_inc_ref");
        var func = Marshal.GetDelegateForFunctionPointer<params_inc_refDelegate>(funcPtr);
        func(c, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_dec_refDelegate(IntPtr c, IntPtr p);

    internal void Z3_params_dec_ref(IntPtr c, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_params_dec_ref");
        var func = Marshal.GetDelegateForFunctionPointer<params_dec_refDelegate>(funcPtr);
        func(c, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_set_boolDelegate(IntPtr c, IntPtr p, IntPtr k, bool v);

    internal void Z3_params_set_bool(IntPtr c, IntPtr p, IntPtr k, bool v)
    {
        var funcPtr = GetFunctionPointer("Z3_params_set_bool");
        var func = Marshal.GetDelegateForFunctionPointer<params_set_boolDelegate>(funcPtr);
        func(c, p, k, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_set_uintDelegate(IntPtr c, IntPtr p, IntPtr k, uint v);

    internal void Z3_params_set_uint(IntPtr c, IntPtr p, IntPtr k, uint v)
    {
        var funcPtr = GetFunctionPointer("Z3_params_set_uint");
        var func = Marshal.GetDelegateForFunctionPointer<params_set_uintDelegate>(funcPtr);
        func(c, p, k, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_set_doubleDelegate(IntPtr c, IntPtr p, IntPtr k, double v);

    internal void Z3_params_set_double(IntPtr c, IntPtr p, IntPtr k, double v)
    {
        var funcPtr = GetFunctionPointer("Z3_params_set_double");
        var func = Marshal.GetDelegateForFunctionPointer<params_set_doubleDelegate>(funcPtr);
        func(c, p, k, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_set_symbolDelegate(IntPtr c, IntPtr p, IntPtr k, IntPtr v);

    internal void Z3_params_set_symbol(IntPtr c, IntPtr p, IntPtr k, IntPtr v)
    {
        var funcPtr = GetFunctionPointer("Z3_params_set_symbol");
        var func = Marshal.GetDelegateForFunctionPointer<params_set_symbolDelegate>(funcPtr);
        func(c, p, k, v);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate IntPtr params_to_stringDelegate(IntPtr c, IntPtr p);

    internal IntPtr Z3_params_to_string(IntPtr c, IntPtr p)
    {
        var funcPtr = GetFunctionPointer("Z3_params_to_string");
        var func = Marshal.GetDelegateForFunctionPointer<params_to_stringDelegate>(funcPtr);
        return func(c, p);
    }

    [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
    private delegate void params_validateDelegate(IntPtr c, IntPtr p, IntPtr d);

    internal void Z3_params_validate(IntPtr c, IntPtr p, IntPtr d)
    {
        var funcPtr = GetFunctionPointer("Z3_params_validate");
        var func = Marshal.GetDelegateForFunctionPointer<params_validateDelegate>(funcPtr);
        func(c, p, d);
    }

}
