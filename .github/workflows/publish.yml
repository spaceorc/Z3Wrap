name: publish

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  publish_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate this is a valid tag
        run: |
          if [[ "${GITHUB_REF_TYPE}" != "tag" ]]; then
            echo "❌ This workflow must be run on a tag, not a branch"
            echo "Selected ref: ${GITHUB_REF_NAME} (type: ${GITHUB_REF_TYPE})"
            exit 1
          fi

          if [[ ! "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "❌ Tag must start with 'v' and follow semantic versioning (e.g., v1.0.0, v1.0.0-beta.1)"
            echo "Selected tag: ${GITHUB_REF_NAME}"
            exit 1
          fi

          echo "✅ Running on valid tag: ${GITHUB_REF_NAME}"

      # Detect prerelease from tag name
      - name: Detect prerelease
        id: flags
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [[ "$TAG" == *-* ]]; then
            echo "pre=true" >> $GITHUB_OUTPUT
            echo "🔄 Detected prerelease tag: $TAG"
          else
            echo "pre=false" >> $GITHUB_OUTPUT
            echo "🎯 Detected stable release tag: $TAG"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "ver=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Show detection results
        run: |
          echo "### 🏷️ Publish Detection Results" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Tag** | \`${{ steps.flags.outputs.tag }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Version** | \`${{ steps.flags.outputs.ver }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Prerelease** | \`${{ steps.flags.outputs.pre }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.flags.outputs.pre }}" == "true" ]]; then
            echo "🔄 **This will be published as a prerelease**" >> $GITHUB_STEP_SUMMARY
          else
            echo "🎯 **This will be published as a stable release**" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install Z3
        run: |
          sudo apt-get update
          sudo apt-get install -y libz3-4

      - name: Setup development tools
        run: make dev-setup

      - name: Create NuGet packages with release notes
        run: make pack

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.flags.outputs.tag }}"
          PRERELEASE="${{ steps.flags.outputs.pre }}"

          echo "Creating GitHub release for $TAG (prerelease: $PRERELEASE)"

          if [[ "$PRERELEASE" == "true" ]]; then
            gh release create "$TAG" \
              --title "Release $TAG" \
              --notes-file "RELEASE_NOTES.md" \
              --prerelease \
              artifacts/*.nupkg artifacts/*.snupkg
          else
            gh release create "$TAG" \
              --title "Release $TAG" \
              --notes-file "RELEASE_NOTES.md" \
              artifacts/*.nupkg artifacts/*.snupkg
          fi

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          TAG="${{ steps.flags.outputs.tag }}"
          PRERELEASE="${{ steps.flags.outputs.pre }}"

          echo "Publishing packages to NuGet for $TAG (prerelease: $PRERELEASE)"

          # Publish main package (.nupkg)
          dotnet nuget push artifacts/*.nupkg \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate

          # Publish symbol package (.snupkg)
          dotnet nuget push artifacts/*.snupkg \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate

          echo "✅ Successfully published packages to NuGet"

      - name: Update CHANGELOG.md for stable releases
        if: steps.flags.outputs.pre == 'false'
        run: |
          echo "📝 Updating CHANGELOG.md (stable release only)"
          make update-changelog

          # Commit and push the changelog update
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs(changelog): release ${{ steps.flags.outputs.tag }}"
          git push

      - name: Update GitHub Actions Summary
        run: |
          TAG="${{ steps.flags.outputs.tag }}"
          PACKAGE_ID="Spaceorc.Z3Wrap"

          echo "### 🎉 Publish Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`$TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### 📦 Published Packages" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🐙 **GitHub Release:** [Release $TAG](https://github.com/${{ github.repository }}/releases/tag/$TAG)" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 **NuGet Package:** [$PACKAGE_ID](https://www.nuget.org/packages/$PACKAGE_ID)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Upload packages for inspection
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: |
            artifacts/*.nupkg
            artifacts/*.snupkg